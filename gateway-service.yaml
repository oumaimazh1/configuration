server:
  port: 8080

spring:
  application:
    name: GatewayService # Nom du service Gateway (doit être cohérent avec Eureka)

  cloud:
    gateway:
      routes:
        - id: account-service
          uri: lb://account-service   # Utilisation de Eureka pour résoudre l'instance du service Account
          predicates:
            - Path=/api/v1/registration/confirm  # La route qui doit être redirigée
          filters:
            - AddRequestHeader=X-Gateway-Header, GatewayService   # Ajoute un en-tête personnalisé à la requête
            - DedupeResponseHeader=Access-Control-Allow-Origin   # Évite les en-têtes en double
      default-filters:
        - name: DedupeResponseHeader   # Filtre pour éviter les en-têtes en double
          args:
            name: Access-Control-Allow-Origin
        - name: AddRequestHeader       # Filtre pour ajouter un en-tête personnalisé
          args:
            name: X-Gateway-Header
            value: GatewayService
      globalcors:
        corsConfigurations:
          '[/**]':                     # Configuration CORS pour toutes les routes
            allowedOrigins:
              - "http://localhost:3000" # Origine autorisée (peut être modifiée selon vos besoins)
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
            allowedHeaders: "*"

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/  # Adresse du serveur Eureka
    fetch-registry: true                         # Permet de récupérer les services enregistrés
    register-with-eureka: true                   # Enregistre ce service dans Eureka

logging:
  level:
    org.springframework.cloud.gateway: DEBUG    # Active les logs détaillés pour le Gateway
    com.netflix.discovery: WARN                 # Réduit les logs moins importants d'Eureka
